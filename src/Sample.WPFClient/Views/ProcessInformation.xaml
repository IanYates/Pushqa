<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:WpfClient="clr-namespace:Sample.WPFClient"
    xmlns:ViewModels="clr-namespace:Sample.WPFClient.ViewModels"
    xmlns:Common="clr-namespace:Sample.Common;assembly=Sample.Common">

    <DataTemplate
        DataType="{x:Type Common:ProcessInfo}">
        <Grid
            Margin="6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="Auto" />
                <ColumnDefinition
                    Width="Auto" />
                <ColumnDefinition
                    Width="Auto" />
                <ColumnDefinition
                    Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock
                Grid.Column="0"
                Text="{Binding ProcessId}" />
            <TextBlock
                Grid.Column="2"
                Margin="5,0,0,0"
                Text="{Binding Name}"
                FontWeight="Bold" />
            <TextBlock
                Grid.Column="1"
                Margin="5,0,0,0"
                Text="{Binding CpuTime}"
                FontWeight="Bold" />
            <TextBlock
                Grid.Column="1"
                Margin="5,0,0,0"
                Text="{Binding WorkingSet}"
                FontWeight="Bold" />
        </Grid>
    </DataTemplate>
    <DataTemplate
        DataType="{x:Type ViewModels:ProcessViewerViewModel}">

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="Auto" />
                <RowDefinition
                    Height="*" />
                <RowDefinition
                    Height="Auto" />
            </Grid.RowDefinitions>

            <TextBlock
                FontFamily="Segoe WP Light"
                FontSize="26.667"
                Text="Processes" />

            <!-- COOLSTUFF: Laying out complex forms

             When you lay out larger forms, it's often best to try to only use
             the "top" and "left" field of the Margin, or else you'll end up
             double-margining things (i.e. setting the Left margin of one
             control and the Right margin of another) and your form will look
             inconsistent. If you combine this rule with the "Only use multiples
             of n" rule, you'll usually end up with a pretty good-looking form.
        -->

            <Grid
                Grid.Row="1"
                Margin="0,12,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="*" />
                    <ColumnDefinition
                        Width="Auto" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition
                        Height="*" />
                    <RowDefinition
                        Height="Auto" />
                </Grid.RowDefinitions>

                <!-- COOLSTUFF: Huh, No ViewModel?

                 You don't always need a ViewModel - if you can get away with
                 binding directly to the Model (usually if the View is
                 read-only), this is okay to do.
            -->

                <DataGrid 
                    ItemsSource="{Binding Processes}">
                    
                </DataGrid>
                <!--<ListBox
                    BorderBrush="#FFD8DEE9"
                    WpfClient:SelectorExtenders.IsAutoscroll="true"
                    IsSynchronizedWithCurrentItem="True"
                    ItemsSource="{Binding Processes}" />-->

            </Grid>
        </Grid>
    </DataTemplate>
</ResourceDictionary>